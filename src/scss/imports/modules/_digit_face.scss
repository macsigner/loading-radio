/**
 * digit-face bem module
 */
@use 'sass:math';
@use "sass:map";

$digit-face-size: 4rem !default;
$digit-face-stroke-width: 8px !default;
$digit-face-line-space: 2px !default;
$digit-list: (
    'reset': (
        'top',
        'top-left',
        'top-right',
        'center',
        'bottom-left',
        'bottom-right',
        'bottom',
    ),
    0: (
        'top',
        'top-left',
        'top-right',
        'bottom-left',
        'bottom-right',
        'bottom',
    ),
    1: (
        'top-right',
        'bottom-right',
    ),
    2: (
        'top',
        'top-right',
        'center',
        'bottom-left',
        'bottom',
    ),
    3: (
        'top',
        'top-right',
        'center',
        'bottom-right',
        'bottom',
    ),
    4: (
        'top-left',
        'top-right',
        'center',
        'bottom-right',
    ),
    5: (
        'top',
        'top-left',
        'center',
        'bottom-right',
        'bottom',
    ),
    6: (
        'top',
        'top-left',
        'center',
        'bottom-left',
        'bottom-right',
        'bottom',
    ),
    7: (
        'top',
        'top-right',
        'bottom-right',
    ),
    8: (
        'top',
        'top-left',
        'top-right',
        'center',
        'bottom-left',
        'bottom-right',
        'bottom',
    ),
    9: (
        'top',
        'top-left',
        'top-right',
        'center',
        'bottom-right',
        'bottom',
    ),
);

@mixin digit-face-number($i) {
    $digit: map.get($digit-list, $i);

    @each $pos in $digit {
        &--#{$pos} {
            @content;
        }
    }
}

.digit-face {
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    &__line {
        grid-column: 1 / -1;
        width: $digit-face-size;
        height: $digit-face-stroke-width;
        opacity: .1;

        &::before,
        &::after {
            content: '';
            display: block;
            width: calc(100% - #{$digit-face-line-space});
            margin: auto;
            border: math.div($digit-face-stroke-width, 2) solid $color-red-digit;
            border-color: $color-red-digit transparent;
        }

        &::before {
            border-top: none;
        }

        &::after {
            border-bottom: none;
        }
    }

    &__line--vertical {
        display: flex;
        grid-column: span 1;
        flex-basis: $digit-face-stroke-width;
        width: $digit-face-stroke-width;
        height: $digit-face-size;

        & + & {
            margin-left: auto;
        }

        &::before,
        &::after {
            width: auto;
            height: calc(100% - #{$digit-face-line-space});
            border: math.div($digit-face-stroke-width, 2) solid $color-red-digit;
            border-color: transparent $color-red-digit;
        }

        &::before {
            border-left: none;
        }

        &::after {
            border-right: none;
        }
    }

    &__line--top,
    &__line--center,
    &__line--bottom {
        margin-top: math.div($digit-face-stroke-width, -2);
        margin-bottom: math.div($digit-face-stroke-width, -2);
    }

    &__line--top-left,
    &__line--bottom-left {
        margin-left: math.div($digit-face-stroke-width, -2);
    }

    &__line--top-right,
    &__line--bottom-right {
        margin-right: math.div($digit-face-stroke-width, -2);
    }

    @for $i from 0 through 9 {
        &--number-#{$i} &__line {
            @include digit-face-number($i) {
                opacity: 1;
            }
        }
    }
}
